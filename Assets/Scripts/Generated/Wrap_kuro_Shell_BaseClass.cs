// This file was automatically generated by kuroneko.
// ReSharper disable InconsistentNaming
using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using kuro.Core;

namespace kuro.ReflectionTool
{
    public partial struct kuro_Shell_BaseClass
    {

        /// <summary>
        /// <see cref="kuro.Shell+BaseClass"/>
        /// </summary>
        public static Type __type__ { get; } = ReflectionUtils.GetTypeByFullName("Assembly-CSharp", "kuro.Shell+BaseClass");


        public string _name
        {
            get => __Get___name(__self__);
            set => __Set___name(__self__, value);
        }

        public kuro_Shell_BaseClass(object __self__) => this.__self__ = __self__ as object;
        public object __self__;
        public bool __valid__ => __self__ != null && __type__ != null;

        public static kuro_Shell_BaseClass __new__()
        {
            return new(Activator.CreateInstance(__type__));
        }

        private static Func<object, string> ___Get___name;
        private static Func<object, string> __Get___name => ___Get___name ??= (__type__.QF("_name")).ILGet<string>();
        private static Action<object, string> ___Set___name;
        private static Action<object, string> __Set___name => ___Set___name ??= (__type__.QF("_name")).ILSet<string>();
    }
}
