// This file was automatically generated by kuroneko.
// ReSharper disable InconsistentNaming
using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using kuro.Core;

namespace kuro.ReflectionTool
{
    public partial struct UnityEditor_Editor
    {

        /// <summary>
        /// <see cref="UnityEditor.Editor"/>
        /// </summary>
        public static Type __type__ { get; } = ReflectionUtils.GetTypeByFullName("UnityEditor.CoreModule", "UnityEditor.Editor");

        public delegate void OnEditorGUIDelegate(UnityEditor.Editor editor, UnityEngine.Rect drawRect);

        public UnityEditor.InspectorMode inspectorMode
        {
            get => __Get__inspectorMode(__self__);
            set => __Set__inspectorMode(__self__, value);
        }

        public UnityEditor.DataMode dataMode => __Get__dataMode(__self__);

        public bool hasUnsavedChanges
        {
            get => __Get__hasUnsavedChanges(__self__);
            set => __Set__hasUnsavedChanges(__self__, value);
        }

        public string saveChangesMessage
        {
            get => __Get__saveChangesMessage(__self__);
            set => __Set__saveChangesMessage(__self__, value);
        }

        public bool firstInspectedEditor
        {
            get => __Get__firstInspectedEditor(__self__);
            set => __Set__firstInspectedEditor(__self__, value);
        }

        public object propertyViewer
        {
            get => (object)(__propertyViewer.GetValue(__self__));
            set => __propertyViewer.SetValue(__self__, value);
        }

        public bool canEditMultipleObjects => __Get__canEditMultipleObjects(__self__);

        public object preview => (object)(__preview.GetValue(__self__));

        public object propertyHandlerCache => (object)(__propertyHandlerCache.GetValue(__self__));

        public bool UnityEditor_IToolModeOwner_areToolModesAvailable => __Get__UnityEditor_IToolModeOwner_areToolModesAvailable(__self__);

        public int referenceTargetIndex
        {
            get => __Get__referenceTargetIndex(__self__);
            set => __Set__referenceTargetIndex(__self__, value);
        }

        public string targetTitle => __Get__targetTitle(__self__);

        public UnityEditor.SerializedProperty enabledProperty => __Get__enabledProperty(__self__);

        public bool isInspectorDirty
        {
            get => __Get__isInspectorDirty(__self__);
            set => __Set__isInspectorDirty(__self__, value);
        }

        public bool alwaysAllowExpansion
        {
            get => __Get__alwaysAllowExpansion(__self__);
            set => __Set__alwaysAllowExpansion(__self__, value);
        }

        public UnityEngine.Object[] m_Targets
        {
            get => __Get__m_Targets(__self__);
            set => __Set__m_Targets(__self__, value);
        }

        public UnityEngine.Object m_Context
        {
            get => __Get__m_Context(__self__);
            set => __Set__m_Context(__self__, value);
        }

        public int m_IsDirty
        {
            get => __Get__m_IsDirty(__self__);
            set => __Set__m_IsDirty(__self__, value);
        }

        public int m_ReferenceTargetIndex
        {
            get => __Get__m_ReferenceTargetIndex(__self__);
            set => __Set__m_ReferenceTargetIndex(__self__, value);
        }

        public object m_PropertyHandlerCache
        {
            get => (object)(__m_PropertyHandlerCache.GetValue(__self__));
            set => __m_PropertyHandlerCache.SetValue(__self__, value);
        }

        public object m_DummyPreview
        {
            get => (object)(__m_DummyPreview.GetValue(__self__));
            set => __m_DummyPreview.SetValue(__self__, value);
        }

        public object m_AudioFilterGUI
        {
            get => (object)(__m_AudioFilterGUI.GetValue(__self__));
            set => __m_AudioFilterGUI.SetValue(__self__, value);
        }

        public UnityEditor.SerializedObject m_SerializedObject
        {
            get => __Get__m_SerializedObject(__self__);
            set => __Set__m_SerializedObject(__self__, value);
        }

        public UnityEditor.SerializedProperty m_EnabledProperty
        {
            get => __Get__m_EnabledProperty(__self__);
            set => __Set__m_EnabledProperty(__self__, value);
        }

        public UnityEditor.InspectorMode m_InspectorMode
        {
            get => __Get__m_InspectorMode(__self__);
            set => __Set__m_InspectorMode(__self__, value);
        }

        public static float kLineHeight
        {
            get => __Get__kLineHeight(null);
            set => __Set__kLineHeight(null, value);
        }

        public bool hideInspector
        {
            get => __Get__hideInspector(__self__);
            set => __Set__hideInspector(__self__, value);
        }

        public static float kImageSectionWidth
        {
            get => (float)(__kImageSectionWidth.GetValue(null));
            set => __kImageSectionWidth.SetValue(null, value);
        }

        public static float k_WideModeMinWidth
        {
            get => (float)(__k_WideModeMinWidth.GetValue(null));
            set => __k_WideModeMinWidth.SetValue(null, value);
        }

        public static float k_HeaderHeight
        {
            get => (float)(__k_HeaderHeight.GetValue(null));
            set => __k_HeaderHeight.SetValue(null, value);
        }

        public static OnEditorGUIDelegate OnPostIconGUI
        {
            get => (__OnPostIconGUI.GetValue(null) as Delegate)?.Cast<OnEditorGUIDelegate>();
            set => __OnPostIconGUI.SetValue(null, value?.Cast(__OnPostIconGUI.FieldType));
        }

        public static bool m_AllowMultiObjectAccess
        {
            get => __Get__m_AllowMultiObjectAccess(null);
            set => __Set__m_AllowMultiObjectAccess(null, value);
        }

        public bool m_HasUnsavedChanges
        {
            get => __Get__m_HasUnsavedChanges(__self__);
            set => __Set__m_HasUnsavedChanges(__self__, value);
        }

        public object m_PropertyViewer
        {
            get => (object)(__m_PropertyViewer.GetValue(__self__));
            set => __m_PropertyViewer.SetValue(__self__, value);
        }

        public static System.Action<UnityEditor.Editor> finishedDefaultHeaderGUI
        {
            get => __Get__finishedDefaultHeaderGUI(null);
            set => __Set__finishedDefaultHeaderGUI(null, value);
        }

        public bool GetHasUnsavedChanges()
        {
            var __result__ = __GetHasUnsavedChanges?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (bool)(__result__) : default;
        }

        public bool HasLargeHeader()
        {
            var __result__ = __HasLargeHeader?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (bool)(__result__) : default;
        }

        public void PostSerializedObjectCreation()
        {
            __PostSerializedObjectCreation?.Invoke(__self__, Array.Empty<object>());
        }

        public void CleanupPropertyEditor()
        {
            __CleanupPropertyEditor?.Invoke(__self__, Array.Empty<object>());
        }

        public void OnDisableINTERNAL()
        {
            __OnDisableINTERNAL?.Invoke(__self__, Array.Empty<object>());
        }

        public UnityEditor.SerializedObject GetSerializedObjectInternal()
        {
            var __result__ = __GetSerializedObjectInternal?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (UnityEditor.SerializedObject)(__result__) : default;
        }

        public void CreateSerializedObject()
        {
            __CreateSerializedObject?.Invoke(__self__, Array.Empty<object>());
        }

        public static void AssignCachedProperties<T>(T self, UnityEditor.SerializedProperty root)
        {
            var __pool__ = FixedArrayPool<object>.Shared(2);
            var __params__ = __pool__.Rent();
            __params__[0] = self;
            __params__[1] = root;
            __AssignCachedProperties?.Invoke(null, __params__);
            __pool__.Return(__params__);
        }

        public void InternalSetTargets(UnityEngine.Object[] t)
        {
            var __pool__ = FixedArrayPool<object>.Shared(1);
            var __params__ = __pool__.Rent();
            __params__[0] = t;
            __InternalSetTargets?.Invoke(__self__, __params__);
            __pool__.Return(__params__);
        }

        public void InternalSetHidden(bool hidden)
        {
            var __pool__ = FixedArrayPool<object>.Shared(1);
            var __params__ = __pool__.Rent();
            __params__[0] = hidden;
            __InternalSetHidden?.Invoke(__self__, __params__);
            __pool__.Return(__params__);
        }

        public void InternalSetContextObject(UnityEngine.Object context)
        {
            var __pool__ = FixedArrayPool<object>.Shared(1);
            var __params__ = __pool__.Rent();
            __params__[0] = context;
            __InternalSetContextObject?.Invoke(__self__, __params__);
            __pool__.Return(__params__);
        }

        public UnityEngine.Bounds UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets()
        {
            var __result__ = __UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (UnityEngine.Bounds)(__result__) : default;
        }

        public UnityEngine.Bounds GetWorldBoundsOfTarget(UnityEngine.Object targetObject)
        {
            var __pool__ = FixedArrayPool<object>.Shared(1);
            var __params__ = __pool__.Rent();
            __params__[0] = targetObject;
            var __result__ = __GetWorldBoundsOfTarget?.Invoke(__self__, __params__);
            __pool__.Return(__params__);
            return __result__ != null ? (UnityEngine.Bounds)(__result__) : default;
        }

        public bool UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange(int toolMode)
        {
            var __pool__ = FixedArrayPool<object>.Shared(1);
            var __params__ = __pool__.Rent();
            __params__[0] = toolMode;
            var __result__ = __UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange?.Invoke(__self__, __params__);
            __pool__.Return(__params__);
            return __result__ != null ? (bool)(__result__) : default;
        }

        public void OnForceReloadInspector()
        {
            __OnForceReloadInspector?.Invoke(__self__, Array.Empty<object>());
        }

        public bool GetOptimizedGUIBlock(bool isDirty, bool isVisible, out float height)
        {
            var __pool__ = FixedArrayPool<object>.Shared(3);
            var __params__ = __pool__.Rent();
            __params__[0] = isDirty;
            __params__[1] = isVisible;
            __params__[2] = null;
            var __result__ = __GetOptimizedGUIBlock?.Invoke(__self__, __params__);
            height = (float)(__params__[2]);
            __pool__.Return(__params__);
            return __result__ != null ? (bool)(__result__) : default;
        }

        public bool OnOptimizedInspectorGUI(UnityEngine.Rect contentRect)
        {
            var __pool__ = FixedArrayPool<object>.Shared(1);
            var __params__ = __pool__.Rent();
            __params__[0] = contentRect;
            var __result__ = __OnOptimizedInspectorGUI?.Invoke(__self__, __params__);
            __pool__.Return(__params__);
            return __result__ != null ? (bool)(__result__) : default;
        }

        public static void DrawPropertiesExcluding(UnityEditor.SerializedObject obj, string[] propertyToExclude) => __DrawPropertiesExcluding(obj, propertyToExclude);

        public static bool DoDrawDefaultInspector(UnityEditor.SerializedObject obj) => __DoDrawDefaultInspector(obj);

        public bool DoDrawDefaultInspector()
        {
            var __result__ = __DoDrawDefaultInspector__2?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (bool)(__result__) : default;
        }

        public void OnHeaderGUI()
        {
            __OnHeaderGUI?.Invoke(__self__, Array.Empty<object>());
        }

        public void OnHeaderControlsGUI()
        {
            __OnHeaderControlsGUI?.Invoke(__self__, Array.Empty<object>());
        }

        public void ShowOpenButton(UnityEngine.Object[] assets, bool enableCondition)
        {
            var __pool__ = FixedArrayPool<object>.Shared(2);
            var __params__ = __pool__.Rent();
            __params__[0] = assets;
            __params__[1] = enableCondition;
            __ShowOpenButton?.Invoke(__self__, __params__);
            __pool__.Return(__params__);
        }

        public bool ShouldHideOpenButton()
        {
            var __result__ = __ShouldHideOpenButton?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (bool)(__result__) : default;
        }

        public bool CanOpenMultipleObjects()
        {
            var __result__ = __CanOpenMultipleObjects?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (bool)(__result__) : default;
        }

        public bool ShouldTryToMakeEditableOnOpen()
        {
            var __result__ = __ShouldTryToMakeEditableOnOpen?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (bool)(__result__) : default;
        }

        public void OnHeaderIconGUI(UnityEngine.Rect iconRect)
        {
            var __pool__ = FixedArrayPool<object>.Shared(1);
            var __params__ = __pool__.Rent();
            __params__[0] = iconRect;
            __OnHeaderIconGUI?.Invoke(__self__, __params__);
            __pool__.Return(__params__);
        }

        public void OnHeaderTitleGUI(UnityEngine.Rect titleRect, string header)
        {
            var __pool__ = FixedArrayPool<object>.Shared(2);
            var __params__ = __pool__.Rent();
            __params__[0] = titleRect;
            __params__[1] = header;
            __OnHeaderTitleGUI?.Invoke(__self__, __params__);
            __pool__.Return(__params__);
        }

        public UnityEngine.Rect DrawHeaderHelpAndSettingsGUI(UnityEngine.Rect r)
        {
            var __pool__ = FixedArrayPool<object>.Shared(1);
            var __params__ = __pool__.Rent();
            __params__[0] = r;
            var __result__ = __DrawHeaderHelpAndSettingsGUI?.Invoke(__self__, __params__);
            __pool__.Return(__params__);
            return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
        }

        public void DrawHeaderFromInsideHierarchy()
        {
            __DrawHeaderFromInsideHierarchy?.Invoke(__self__, Array.Empty<object>());
        }

        public static UnityEngine.Rect DrawHeaderGUI(UnityEditor.Editor editor, string header) => __DrawHeaderGUI(editor, header);

        public static UnityEngine.Rect DrawHeaderGUI(UnityEditor.Editor editor, string header, float leftMargin) => __DrawHeaderGUI__2(editor, header, leftMargin);

        public static void CheckForMainObjectNameMismatch(UnityEditor.Editor editor) => __CheckForMainObjectNameMismatch(editor);

        public static void DrawMismatchedNameNotification(UnityEditor.Editor editor, string expectedMainObjectName, string mainObjectName) => __DrawMismatchedNameNotification(editor, expectedMainObjectName, mainObjectName);

        public static void DrawNotification(UnityEngine.Texture image, string text, string btnText, System.Action onBtnClick) => __DrawNotification(image, text, btnText, onBtnClick);

        public void DrawPostIconContent(UnityEngine.Rect iconRect)
        {
            var __pool__ = FixedArrayPool<object>.Shared(1);
            var __params__ = __pool__.Rent();
            __params__[0] = iconRect;
            __DrawPostIconContent?.Invoke(__self__, __params__);
            __pool__.Return(__params__);
        }

        public bool CanBeExpandedViaAFoldout()
        {
            var __result__ = __CanBeExpandedViaAFoldout?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (bool)(__result__) : default;
        }

        public bool CanBeExpandedViaAFoldoutWithoutUpdate()
        {
            var __result__ = __CanBeExpandedViaAFoldoutWithoutUpdate?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (bool)(__result__) : default;
        }

        public static bool IsAppropriateFileOpenForEdit(UnityEngine.Object assetObject) => __IsAppropriateFileOpenForEdit(assetObject);

        public bool IsEnabled()
        {
            var __result__ = __IsEnabled?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (bool)(__result__) : default;
        }

        public bool IsOpenForEdit()
        {
            var __result__ = __IsOpenForEdit?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (bool)(__result__) : default;
        }

        public void OnAssetStoreInspectorGUI()
        {
            __OnAssetStoreInspectorGUI?.Invoke(__self__, Array.Empty<object>());
        }

        public static UnityEditor.Editor CreateEditorWithContextInternal(UnityEngine.Object[] targetObjects, UnityEngine.Object context, System.Type editorType) => __CreateEditorWithContextInternal(targetObjects, context, editorType);

        public static UnityEngine.Vector2 GetCurrentMousePosition() => __GetCurrentMousePosition();

        public int UnityEditor_IToolModeOwner_GetInstanceID()
        {
            var __result__ = __UnityEditor_IToolModeOwner_GetInstanceID?.Invoke(__self__, Array.Empty<object>());
            return __result__ != null ? (int)(__result__) : default;
        }

        public static void GetCurrentMousePosition_Injected(out UnityEngine.Vector2 ret) => __GetCurrentMousePosition_Injected(out ret);

        public UnityEditor_Editor(object __self__) => this.__self__ = __self__ as UnityEngine.Object;
        public UnityEngine.Object __self__;
        public bool __valid__ => __self__ != null && __type__ != null;
        public UnityEditor.Editor __super__ => (UnityEditor.Editor)(__self__);
        public UnityEditor.Editor __base__ => (UnityEditor.Editor)(__self__);

        private static Func<object, UnityEngine.Object[]> ___Get__m_Targets;
        private static Func<object, UnityEngine.Object[]> __Get__m_Targets => ___Get__m_Targets ??= (__type__.QF("m_Targets")).ILGet<UnityEngine.Object[]>();
        private static Action<object, UnityEngine.Object[]> ___Set__m_Targets;
        private static Action<object, UnityEngine.Object[]> __Set__m_Targets => ___Set__m_Targets ??= (__type__.QF("m_Targets")).ILSet<UnityEngine.Object[]>();

        private static Func<object, UnityEngine.Object> ___Get__m_Context;
        private static Func<object, UnityEngine.Object> __Get__m_Context => ___Get__m_Context ??= (__type__.QF("m_Context")).ILGet<UnityEngine.Object>();
        private static Action<object, UnityEngine.Object> ___Set__m_Context;
        private static Action<object, UnityEngine.Object> __Set__m_Context => ___Set__m_Context ??= (__type__.QF("m_Context")).ILSet<UnityEngine.Object>();

        private static Func<object, int> ___Get__m_IsDirty;
        private static Func<object, int> __Get__m_IsDirty => ___Get__m_IsDirty ??= (__type__.QF("m_IsDirty")).ILGet<int>();
        private static Action<object, int> ___Set__m_IsDirty;
        private static Action<object, int> __Set__m_IsDirty => ___Set__m_IsDirty ??= (__type__.QF("m_IsDirty")).ILSet<int>();

        private static Func<object, int> ___Get__m_ReferenceTargetIndex;
        private static Func<object, int> __Get__m_ReferenceTargetIndex => ___Get__m_ReferenceTargetIndex ??= (__type__.QF("m_ReferenceTargetIndex")).ILGet<int>();
        private static Action<object, int> ___Set__m_ReferenceTargetIndex;
        private static Action<object, int> __Set__m_ReferenceTargetIndex => ___Set__m_ReferenceTargetIndex ??= (__type__.QF("m_ReferenceTargetIndex")).ILSet<int>();

        private static FieldInfo ___m_PropertyHandlerCache;
        private static FieldInfo __m_PropertyHandlerCache => ___m_PropertyHandlerCache ??= __type__?.QF("m_PropertyHandlerCache");

        private static FieldInfo ___m_DummyPreview;
        private static FieldInfo __m_DummyPreview => ___m_DummyPreview ??= __type__?.QF("m_DummyPreview");

        private static FieldInfo ___m_AudioFilterGUI;
        private static FieldInfo __m_AudioFilterGUI => ___m_AudioFilterGUI ??= __type__?.QF("m_AudioFilterGUI");

        private static Func<object, UnityEditor.SerializedObject> ___Get__m_SerializedObject;
        private static Func<object, UnityEditor.SerializedObject> __Get__m_SerializedObject => ___Get__m_SerializedObject ??= (__type__.QF("m_SerializedObject")).ILGet<UnityEditor.SerializedObject>();
        private static Action<object, UnityEditor.SerializedObject> ___Set__m_SerializedObject;
        private static Action<object, UnityEditor.SerializedObject> __Set__m_SerializedObject => ___Set__m_SerializedObject ??= (__type__.QF("m_SerializedObject")).ILSet<UnityEditor.SerializedObject>();

        private static Func<object, UnityEditor.SerializedProperty> ___Get__m_EnabledProperty;
        private static Func<object, UnityEditor.SerializedProperty> __Get__m_EnabledProperty => ___Get__m_EnabledProperty ??= (__type__.QF("m_EnabledProperty")).ILGet<UnityEditor.SerializedProperty>();
        private static Action<object, UnityEditor.SerializedProperty> ___Set__m_EnabledProperty;
        private static Action<object, UnityEditor.SerializedProperty> __Set__m_EnabledProperty => ___Set__m_EnabledProperty ??= (__type__.QF("m_EnabledProperty")).ILSet<UnityEditor.SerializedProperty>();

        private static Func<object, UnityEditor.InspectorMode> ___Get__m_InspectorMode;
        private static Func<object, UnityEditor.InspectorMode> __Get__m_InspectorMode => ___Get__m_InspectorMode ??= (__type__.QF("m_InspectorMode")).ILGet<UnityEditor.InspectorMode>();
        private static Action<object, UnityEditor.InspectorMode> ___Set__m_InspectorMode;
        private static Action<object, UnityEditor.InspectorMode> __Set__m_InspectorMode => ___Set__m_InspectorMode ??= (__type__.QF("m_InspectorMode")).ILSet<UnityEditor.InspectorMode>();

        private static Func<object, float> ___Get__kLineHeight;
        private static Func<object, float> __Get__kLineHeight => ___Get__kLineHeight ??= (__type__.QF("kLineHeight")).ILGet<float>();
        private static Action<object, float> ___Set__kLineHeight;
        private static Action<object, float> __Set__kLineHeight => ___Set__kLineHeight ??= (__type__.QF("kLineHeight")).ILSet<float>();

        private static Func<object, bool> ___Get__hideInspector;
        private static Func<object, bool> __Get__hideInspector => ___Get__hideInspector ??= (__type__.QF("hideInspector")).ILGet<bool>();
        private static Action<object, bool> ___Set__hideInspector;
        private static Action<object, bool> __Set__hideInspector => ___Set__hideInspector ??= (__type__.QF("hideInspector")).ILSet<bool>();

        private static FieldInfo ___kImageSectionWidth;
        private static FieldInfo __kImageSectionWidth => ___kImageSectionWidth ??= __type__?.QF("kImageSectionWidth");

        private static FieldInfo ___k_WideModeMinWidth;
        private static FieldInfo __k_WideModeMinWidth => ___k_WideModeMinWidth ??= __type__?.QF("k_WideModeMinWidth");

        private static FieldInfo ___k_HeaderHeight;
        private static FieldInfo __k_HeaderHeight => ___k_HeaderHeight ??= __type__?.QF("k_HeaderHeight");

        private static FieldInfo ___OnPostIconGUI;
        private static FieldInfo __OnPostIconGUI => ___OnPostIconGUI ??= __type__?.QF("OnPostIconGUI");

        private static Func<object, bool> ___Get__m_AllowMultiObjectAccess;
        private static Func<object, bool> __Get__m_AllowMultiObjectAccess => ___Get__m_AllowMultiObjectAccess ??= (__type__.QF("m_AllowMultiObjectAccess")).ILGet<bool>();
        private static Action<object, bool> ___Set__m_AllowMultiObjectAccess;
        private static Action<object, bool> __Set__m_AllowMultiObjectAccess => ___Set__m_AllowMultiObjectAccess ??= (__type__.QF("m_AllowMultiObjectAccess")).ILSet<bool>();

        private static Func<object, bool> ___Get__m_HasUnsavedChanges;
        private static Func<object, bool> __Get__m_HasUnsavedChanges => ___Get__m_HasUnsavedChanges ??= (__type__.QF("m_HasUnsavedChanges")).ILGet<bool>();
        private static Action<object, bool> ___Set__m_HasUnsavedChanges;
        private static Action<object, bool> __Set__m_HasUnsavedChanges => ___Set__m_HasUnsavedChanges ??= (__type__.QF("m_HasUnsavedChanges")).ILSet<bool>();

        private static FieldInfo ___m_PropertyViewer;
        private static FieldInfo __m_PropertyViewer => ___m_PropertyViewer ??= __type__?.QF("m_PropertyViewer");

        private static Func<object, System.Action<UnityEditor.Editor>> ___Get__finishedDefaultHeaderGUI;
        private static Func<object, System.Action<UnityEditor.Editor>> __Get__finishedDefaultHeaderGUI => ___Get__finishedDefaultHeaderGUI ??= (__type__.QF("finishedDefaultHeaderGUI")).ILGet<System.Action<UnityEditor.Editor>>();
        private static Action<object, System.Action<UnityEditor.Editor>> ___Set__finishedDefaultHeaderGUI;
        private static Action<object, System.Action<UnityEditor.Editor>> __Set__finishedDefaultHeaderGUI => ___Set__finishedDefaultHeaderGUI ??= (__type__.QF("finishedDefaultHeaderGUI")).ILSet<System.Action<UnityEditor.Editor>>();

        private static Func<object, UnityEditor.InspectorMode> ___Get__inspectorMode;
        private static Func<object, UnityEditor.InspectorMode> __Get__inspectorMode => ___Get__inspectorMode ??= (__type__.QP("inspectorMode")).ILGet<UnityEditor.InspectorMode>();
        private static Action<object, UnityEditor.InspectorMode> ___Set__inspectorMode;
        private static Action<object, UnityEditor.InspectorMode> __Set__inspectorMode => ___Set__inspectorMode ??= (__type__.QP("inspectorMode")).ILSet<UnityEditor.InspectorMode>();

        private static Func<object, UnityEditor.DataMode> ___Get__dataMode;
        private static Func<object, UnityEditor.DataMode> __Get__dataMode => ___Get__dataMode ??= (__type__.QP("dataMode")).ILGet<UnityEditor.DataMode>();

        private static Func<object, bool> ___Get__hasUnsavedChanges;
        private static Func<object, bool> __Get__hasUnsavedChanges => ___Get__hasUnsavedChanges ??= (__type__.QP("hasUnsavedChanges")).ILGet<bool>();
        private static Action<object, bool> ___Set__hasUnsavedChanges;
        private static Action<object, bool> __Set__hasUnsavedChanges => ___Set__hasUnsavedChanges ??= (__type__.QP("hasUnsavedChanges")).ILSet<bool>();

        private static Func<object, string> ___Get__saveChangesMessage;
        private static Func<object, string> __Get__saveChangesMessage => ___Get__saveChangesMessage ??= (__type__.QP("saveChangesMessage")).ILGet<string>();
        private static Action<object, string> ___Set__saveChangesMessage;
        private static Action<object, string> __Set__saveChangesMessage => ___Set__saveChangesMessage ??= (__type__.QP("saveChangesMessage")).ILSet<string>();

        private static Func<object, bool> ___Get__firstInspectedEditor;
        private static Func<object, bool> __Get__firstInspectedEditor => ___Get__firstInspectedEditor ??= (__type__.QP("firstInspectedEditor")).ILGet<bool>();
        private static Action<object, bool> ___Set__firstInspectedEditor;
        private static Action<object, bool> __Set__firstInspectedEditor => ___Set__firstInspectedEditor ??= (__type__.QP("firstInspectedEditor")).ILSet<bool>();

        private static PropertyInfo ___propertyViewer;
        private static PropertyInfo __propertyViewer => ___propertyViewer ??= __type__?.QP("propertyViewer");

        private static Func<object, bool> ___Get__canEditMultipleObjects;
        private static Func<object, bool> __Get__canEditMultipleObjects => ___Get__canEditMultipleObjects ??= (__type__.QP("canEditMultipleObjects")).ILGet<bool>();

        private static PropertyInfo ___preview;
        private static PropertyInfo __preview => ___preview ??= __type__?.QP("preview");

        private static PropertyInfo ___propertyHandlerCache;
        private static PropertyInfo __propertyHandlerCache => ___propertyHandlerCache ??= __type__?.QP("propertyHandlerCache");

        private static Func<object, bool> ___Get__UnityEditor_IToolModeOwner_areToolModesAvailable;
        private static Func<object, bool> __Get__UnityEditor_IToolModeOwner_areToolModesAvailable => ___Get__UnityEditor_IToolModeOwner_areToolModesAvailable ??= (__type__.QP("UnityEditor.IToolModeOwner.areToolModesAvailable")).ILGet<bool>();

        private static Func<object, int> ___Get__referenceTargetIndex;
        private static Func<object, int> __Get__referenceTargetIndex => ___Get__referenceTargetIndex ??= (__type__.QP("referenceTargetIndex")).ILGet<int>();
        private static Action<object, int> ___Set__referenceTargetIndex;
        private static Action<object, int> __Set__referenceTargetIndex => ___Set__referenceTargetIndex ??= (__type__.QP("referenceTargetIndex")).ILSet<int>();

        private static Func<object, string> ___Get__targetTitle;
        private static Func<object, string> __Get__targetTitle => ___Get__targetTitle ??= (__type__.QP("targetTitle")).ILGet<string>();

        private static Func<object, UnityEditor.SerializedProperty> ___Get__enabledProperty;
        private static Func<object, UnityEditor.SerializedProperty> __Get__enabledProperty => ___Get__enabledProperty ??= (__type__.QP("enabledProperty")).ILGet<UnityEditor.SerializedProperty>();

        private static Func<object, bool> ___Get__isInspectorDirty;
        private static Func<object, bool> __Get__isInspectorDirty => ___Get__isInspectorDirty ??= (__type__.QP("isInspectorDirty")).ILGet<bool>();
        private static Action<object, bool> ___Set__isInspectorDirty;
        private static Action<object, bool> __Set__isInspectorDirty => ___Set__isInspectorDirty ??= (__type__.QP("isInspectorDirty")).ILSet<bool>();

        private static Func<object, bool> ___Get__alwaysAllowExpansion;
        private static Func<object, bool> __Get__alwaysAllowExpansion => ___Get__alwaysAllowExpansion ??= (__type__.QP("alwaysAllowExpansion")).ILGet<bool>();
        private static Action<object, bool> ___Set__alwaysAllowExpansion;
        private static Action<object, bool> __Set__alwaysAllowExpansion => ___Set__alwaysAllowExpansion ??= (__type__.QP("alwaysAllowExpansion")).ILSet<bool>();

        private static MethodInfo ___GetHasUnsavedChanges;
        private static MethodInfo __GetHasUnsavedChanges => ___GetHasUnsavedChanges ??= __type__.QM("GetHasUnsavedChanges");

        private static MethodInfo ___HasLargeHeader;
        private static MethodInfo __HasLargeHeader => ___HasLargeHeader ??= __type__.QM("HasLargeHeader");

        private static MethodInfo ___PostSerializedObjectCreation;
        private static MethodInfo __PostSerializedObjectCreation => ___PostSerializedObjectCreation ??= __type__.QM("PostSerializedObjectCreation");

        private static MethodInfo ___CleanupPropertyEditor;
        private static MethodInfo __CleanupPropertyEditor => ___CleanupPropertyEditor ??= __type__.QM("CleanupPropertyEditor");

        private static MethodInfo ___OnDisableINTERNAL;
        private static MethodInfo __OnDisableINTERNAL => ___OnDisableINTERNAL ??= __type__.QM("OnDisableINTERNAL");

        private static MethodInfo ___GetSerializedObjectInternal;
        private static MethodInfo __GetSerializedObjectInternal => ___GetSerializedObjectInternal ??= __type__.QM("GetSerializedObjectInternal");

        private static MethodInfo ___CreateSerializedObject;
        private static MethodInfo __CreateSerializedObject => ___CreateSerializedObject ??= __type__.QM("CreateSerializedObject");

        private static MethodInfo ___AssignCachedProperties;
        private static MethodInfo __AssignCachedProperties => ___AssignCachedProperties ??= __type__.QM("AssignCachedProperties", "", "UnityEditor.SerializedProperty");

        private static MethodInfo ___InternalSetTargets;
        private static MethodInfo __InternalSetTargets => ___InternalSetTargets ??= __type__.QM("InternalSetTargets", "UnityEngine.Object[]");

        private static MethodInfo ___InternalSetHidden;
        private static MethodInfo __InternalSetHidden => ___InternalSetHidden ??= __type__.QM("InternalSetHidden", "System.Boolean");

        private static MethodInfo ___InternalSetContextObject;
        private static MethodInfo __InternalSetContextObject => ___InternalSetContextObject ??= __type__.QM("InternalSetContextObject", "UnityEngine.Object");

        private static MethodInfo ___UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets;
        private static MethodInfo __UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets => ___UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets ??= __type__.QM("UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets");

        private static MethodInfo ___GetWorldBoundsOfTarget;
        private static MethodInfo __GetWorldBoundsOfTarget => ___GetWorldBoundsOfTarget ??= __type__.QM("GetWorldBoundsOfTarget", "UnityEngine.Object");

        private static MethodInfo ___UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange;
        private static MethodInfo __UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange => ___UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange ??= __type__.QM("UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange", "System.Int32");

        private static MethodInfo ___OnForceReloadInspector;
        private static MethodInfo __OnForceReloadInspector => ___OnForceReloadInspector ??= __type__.QM("OnForceReloadInspector");

        private static MethodInfo ___GetOptimizedGUIBlock;
        private static MethodInfo __GetOptimizedGUIBlock => ___GetOptimizedGUIBlock ??= __type__.QM("GetOptimizedGUIBlock", "System.Boolean", "System.Boolean", "System.Single&");

        private static MethodInfo ___OnOptimizedInspectorGUI;
        private static MethodInfo __OnOptimizedInspectorGUI => ___OnOptimizedInspectorGUI ??= __type__.QM("OnOptimizedInspectorGUI", "UnityEngine.Rect");

        private delegate void __D__DrawPropertiesExcluding(UnityEditor.SerializedObject obj, string[] propertyToExclude);
        private static __D__DrawPropertiesExcluding ___DrawPropertiesExcluding;
        private static __D__DrawPropertiesExcluding __DrawPropertiesExcluding => ___DrawPropertiesExcluding ??= __type__.QM("DrawPropertiesExcluding", "UnityEditor.SerializedObject", "System.String[]")?.CreateDelegate<__D__DrawPropertiesExcluding>();

        private delegate bool __D__DoDrawDefaultInspector(UnityEditor.SerializedObject obj);
        private static __D__DoDrawDefaultInspector ___DoDrawDefaultInspector;
        private static __D__DoDrawDefaultInspector __DoDrawDefaultInspector => ___DoDrawDefaultInspector ??= __type__.QM("DoDrawDefaultInspector", "UnityEditor.SerializedObject")?.CreateDelegate<__D__DoDrawDefaultInspector>();

        private static MethodInfo ___DoDrawDefaultInspector__2;
        private static MethodInfo __DoDrawDefaultInspector__2 => ___DoDrawDefaultInspector__2 ??= __type__.QM("DoDrawDefaultInspector");

        private static MethodInfo ___OnHeaderGUI;
        private static MethodInfo __OnHeaderGUI => ___OnHeaderGUI ??= __type__.QM("OnHeaderGUI");

        private static MethodInfo ___OnHeaderControlsGUI;
        private static MethodInfo __OnHeaderControlsGUI => ___OnHeaderControlsGUI ??= __type__.QM("OnHeaderControlsGUI");

        private static MethodInfo ___ShowOpenButton;
        private static MethodInfo __ShowOpenButton => ___ShowOpenButton ??= __type__.QM("ShowOpenButton", "UnityEngine.Object[]", "System.Boolean");

        private static MethodInfo ___ShouldHideOpenButton;
        private static MethodInfo __ShouldHideOpenButton => ___ShouldHideOpenButton ??= __type__.QM("ShouldHideOpenButton");

        private static MethodInfo ___CanOpenMultipleObjects;
        private static MethodInfo __CanOpenMultipleObjects => ___CanOpenMultipleObjects ??= __type__.QM("CanOpenMultipleObjects");

        private static MethodInfo ___ShouldTryToMakeEditableOnOpen;
        private static MethodInfo __ShouldTryToMakeEditableOnOpen => ___ShouldTryToMakeEditableOnOpen ??= __type__.QM("ShouldTryToMakeEditableOnOpen");

        private static MethodInfo ___OnHeaderIconGUI;
        private static MethodInfo __OnHeaderIconGUI => ___OnHeaderIconGUI ??= __type__.QM("OnHeaderIconGUI", "UnityEngine.Rect");

        private static MethodInfo ___OnHeaderTitleGUI;
        private static MethodInfo __OnHeaderTitleGUI => ___OnHeaderTitleGUI ??= __type__.QM("OnHeaderTitleGUI", "UnityEngine.Rect", "System.String");

        private static MethodInfo ___DrawHeaderHelpAndSettingsGUI;
        private static MethodInfo __DrawHeaderHelpAndSettingsGUI => ___DrawHeaderHelpAndSettingsGUI ??= __type__.QM("DrawHeaderHelpAndSettingsGUI", "UnityEngine.Rect");

        private static MethodInfo ___DrawHeaderFromInsideHierarchy;
        private static MethodInfo __DrawHeaderFromInsideHierarchy => ___DrawHeaderFromInsideHierarchy ??= __type__.QM("DrawHeaderFromInsideHierarchy");

        private delegate UnityEngine.Rect __D__DrawHeaderGUI(UnityEditor.Editor editor, string header);
        private static __D__DrawHeaderGUI ___DrawHeaderGUI;
        private static __D__DrawHeaderGUI __DrawHeaderGUI => ___DrawHeaderGUI ??= __type__.QM("DrawHeaderGUI", "UnityEditor.Editor", "System.String")?.CreateDelegate<__D__DrawHeaderGUI>();

        private delegate UnityEngine.Rect __D__DrawHeaderGUI__2(UnityEditor.Editor editor, string header, float leftMargin);
        private static __D__DrawHeaderGUI__2 ___DrawHeaderGUI__2;
        private static __D__DrawHeaderGUI__2 __DrawHeaderGUI__2 => ___DrawHeaderGUI__2 ??= __type__.QM("DrawHeaderGUI", "UnityEditor.Editor", "System.String", "System.Single")?.CreateDelegate<__D__DrawHeaderGUI__2>();

        private delegate void __D__CheckForMainObjectNameMismatch(UnityEditor.Editor editor);
        private static __D__CheckForMainObjectNameMismatch ___CheckForMainObjectNameMismatch;
        private static __D__CheckForMainObjectNameMismatch __CheckForMainObjectNameMismatch => ___CheckForMainObjectNameMismatch ??= __type__.QM("CheckForMainObjectNameMismatch", "UnityEditor.Editor")?.CreateDelegate<__D__CheckForMainObjectNameMismatch>();

        private delegate void __D__DrawMismatchedNameNotification(UnityEditor.Editor editor, string expectedMainObjectName, string mainObjectName);
        private static __D__DrawMismatchedNameNotification ___DrawMismatchedNameNotification;
        private static __D__DrawMismatchedNameNotification __DrawMismatchedNameNotification => ___DrawMismatchedNameNotification ??= __type__.QM("DrawMismatchedNameNotification", "UnityEditor.Editor", "System.String", "System.String")?.CreateDelegate<__D__DrawMismatchedNameNotification>();

        private delegate void __D__DrawNotification(UnityEngine.Texture image, string text, string btnText, System.Action onBtnClick);
        private static __D__DrawNotification ___DrawNotification;
        private static __D__DrawNotification __DrawNotification => ___DrawNotification ??= __type__.QM("DrawNotification", "UnityEngine.Texture", "System.String", "System.String", "System.Action")?.CreateDelegate<__D__DrawNotification>();

        private static MethodInfo ___DrawPostIconContent;
        private static MethodInfo __DrawPostIconContent => ___DrawPostIconContent ??= __type__.QM("DrawPostIconContent", "UnityEngine.Rect");

        private static MethodInfo ___CanBeExpandedViaAFoldout;
        private static MethodInfo __CanBeExpandedViaAFoldout => ___CanBeExpandedViaAFoldout ??= __type__.QM("CanBeExpandedViaAFoldout");

        private static MethodInfo ___CanBeExpandedViaAFoldoutWithoutUpdate;
        private static MethodInfo __CanBeExpandedViaAFoldoutWithoutUpdate => ___CanBeExpandedViaAFoldoutWithoutUpdate ??= __type__.QM("CanBeExpandedViaAFoldoutWithoutUpdate");

        private delegate bool __D__IsAppropriateFileOpenForEdit(UnityEngine.Object assetObject);
        private static __D__IsAppropriateFileOpenForEdit ___IsAppropriateFileOpenForEdit;
        private static __D__IsAppropriateFileOpenForEdit __IsAppropriateFileOpenForEdit => ___IsAppropriateFileOpenForEdit ??= __type__.QM("IsAppropriateFileOpenForEdit", "UnityEngine.Object")?.CreateDelegate<__D__IsAppropriateFileOpenForEdit>();

        private static MethodInfo ___IsEnabled;
        private static MethodInfo __IsEnabled => ___IsEnabled ??= __type__.QM("IsEnabled");

        private static MethodInfo ___IsOpenForEdit;
        private static MethodInfo __IsOpenForEdit => ___IsOpenForEdit ??= __type__.QM("IsOpenForEdit");

        private static MethodInfo ___OnAssetStoreInspectorGUI;
        private static MethodInfo __OnAssetStoreInspectorGUI => ___OnAssetStoreInspectorGUI ??= __type__.QM("OnAssetStoreInspectorGUI");

        private delegate UnityEditor.Editor __D__CreateEditorWithContextInternal(UnityEngine.Object[] targetObjects, UnityEngine.Object context, System.Type editorType);
        private static __D__CreateEditorWithContextInternal ___CreateEditorWithContextInternal;
        private static __D__CreateEditorWithContextInternal __CreateEditorWithContextInternal => ___CreateEditorWithContextInternal ??= __type__.QM("CreateEditorWithContextInternal", "UnityEngine.Object[]", "UnityEngine.Object", "System.Type")?.CreateDelegate<__D__CreateEditorWithContextInternal>();

        private delegate UnityEngine.Vector2 __D__GetCurrentMousePosition();
        private static __D__GetCurrentMousePosition ___GetCurrentMousePosition;
        private static __D__GetCurrentMousePosition __GetCurrentMousePosition => ___GetCurrentMousePosition ??= __type__.QM("GetCurrentMousePosition")?.CreateDelegate<__D__GetCurrentMousePosition>();

        private static MethodInfo ___UnityEditor_IToolModeOwner_GetInstanceID;
        private static MethodInfo __UnityEditor_IToolModeOwner_GetInstanceID => ___UnityEditor_IToolModeOwner_GetInstanceID ??= __type__.QM("UnityEditor_IToolModeOwner_GetInstanceID");

        private delegate void __D__GetCurrentMousePosition_Injected(out UnityEngine.Vector2 ret);
        private static __D__GetCurrentMousePosition_Injected ___GetCurrentMousePosition_Injected;
        private static __D__GetCurrentMousePosition_Injected __GetCurrentMousePosition_Injected => ___GetCurrentMousePosition_Injected ??= __type__.QM("GetCurrentMousePosition_Injected", "UnityEngine.Vector2&")?.CreateDelegate<__D__GetCurrentMousePosition_Injected>();
    }
    public static class UnityEditor_Editor_Extension
    {
        public static UnityEditor_Editor ReflectionHelper(this UnityEditor.Editor self) => new(self);
    }
}
